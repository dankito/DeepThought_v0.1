import com.sun.org.apache.xalan.internal.xsltc.cmdline.Compile

apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_7

// set encoding on all tasks that compile code as otherwise OS' default encoding is used (e.g. on Windows Cp1252 which cannot process default Languages
// code copied from http://mrhaki.blogspot.de/2012/06/gradle-goodness-set-java-compiler.html
tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}


//// to implement a separate folder structure for integration tests
//sourceSets {
//    integrationTest {
//        java.srcDir file('src/integTest/java')
//        resources.srcDir file('src/integTest/resources')
//        compileClasspath = sourceSets.main.output + configurations.testRuntime
//        runtimeClasspath = output + compileClasspath
//    }
//}
//
//task integrationTest(type: Test) {
//    description = 'Runs the integration tests.'
//    group = 'verification'
//    testClassesDir = sourceSets.integrationTest.output.classesDir
//    classpath = sourceSets.integrationTest.runtimeClasspath
//    // TODO: produces error: Error:(28, 0) Could not find property 'testResultsDirs' on task ':DeepThoughtLib:integrationTest'.
//    //testResultsDir = file("$testResultsDirs/integration")
//}

// apply some code analysis with JaCoCo on integration tests (not that senseful actually, apply it to unit tests)

//apply plugin: 'jacoco'
//
//task jacocoIntegrationTestReport(type: JacocoReport) {
//    sourceSets sourceSets.main
//    executionData integrationTest
//}

// apply versioning
allprojects {
    apply from: "$rootDir/gradle/versioning.gradle"
}


dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile project(':json-io')
    compile project(':commons-lang')
    compile project(':Boilerpipe')

    compile 'org.eclipse.persistence:javax.persistence:2.1.0'
    compile 'com.norconex.language:langdetect:1.3.0'
    compile 'org.apache.tika:tika-core:1.8'
    compile 'org.jsoup:jsoup:1.8.1'
    compile 'org.apache.httpcomponents:httpclient:4.1.3'
    compile 'org.apache.httpcomponents:httpmime:4.1.3'

    testCompile 'junit:junit:4.11'
    testCompile 'ch.qos.logback:logback-core:1.1.2'
    testCompile 'ch.qos.logback:logback-classic:1.1.2'
    testCompile 'org.mockito:mockito-all:1.10.19'

    testCompile 'com.google.code.gson:gson:2.3.1'
}


//sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir

// so that Test classes from other projects can see classes from src/test folder
task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "test-${project.archivesBaseName}"
    from sourceSets.test.output
}

configurations {
    tests
}

artifacts {
    tests testJar
}